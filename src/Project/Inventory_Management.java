/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author USER
 */
public class Inventory_Management extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Inventory_Management() {
        initComponents();

        timedate();
        padd();
        jPanel15.setFocusable(true);
        jPanel8.setFocusable(true);
        jPanel4.setFocusable(true);
        jPanel3.setFocusable(true);
        jPanel13.setFocusable(true);
        jPanel6.setFocusable(true);
        jPanel20.setFocusable(true);
    }

    String fp = "D:/Inventory Info/Apps file(Do't Delete this)/";
    String fpp = "D:/Inventory Info/";
    String fp1="D:/Inventory Info/Apps file(Do't Delete this)";
    String fpp1 = "D:/Inventory Info";

    String formattedDate;

    public void timedate() {

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        LocalDate localDate = LocalDate.now();

        formattedDate = dtf.format(localDate);

    }

    public void padd() {
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel15);
        jPanel23.repaint();
        jPanel23.revalidate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel23 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1list = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1finaldetails = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jTextField1editItem = new javax.swing.JTextField();
        jComboBox1EditItem = new javax.swing.JComboBox<>();
        jTextField2bbbb = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jComboBox2deititemdetails = new javax.swing.JComboBox<>();
        jButton15 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1detailsofItem = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable2222222 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1Addbrand = new javax.swing.JTable();
        jTextFielddetailsitem = new javax.swing.JTextField();
        jComboBox1ShowItem = new javax.swing.JComboBox<>();
        jTextField2brandname = new javax.swing.JTextField();
        jTextField3Quantity = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1delete = new javax.swing.JTable();
        jTextField1delete = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4AddDetails = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jTextField1filename = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1Addlist = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPasswordField2 = new javax.swing.JPasswordField();
        name1 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel23.setLayout(new java.awt.CardLayout());

        jPanel18.setLayout(null);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setLayout(null);

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(204, 0, 51));
        jLabel37.setText("All Data will save in local Disk ");
        jPanel19.add(jLabel37);
        jLabel37.setBounds(532, 728, 392, 70);

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 51, 51));
        jLabel38.setText("D");
        jPanel19.add(jLabel38);
        jLabel38.setBounds(910, 728, 154, 56);
        jPanel19.add(jLabel29);
        jLabel29.setBounds(168, 772, 490, 84);

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton9.setText("Start");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel19.add(jButton9);
        jButton9.setBounds(434, 616, 238, 84);

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/01.10.2018-photo-for-blog-post-22.jpeg"))); // NOI18N
        jLabel28.setText("jLabel28");
        jPanel19.add(jLabel28);
        jLabel28.setBounds(56, 14, 1008, 826);

        jPanel18.add(jPanel19);
        jPanel19.setBounds(-98, -98, 1036, 896);

        jPanel23.add(jPanel18, "card3");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(null);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel14.add(jLabel1);
        jLabel1.setBounds(462, 126, 168, 42);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel14.add(jLabel2);
        jLabel2.setBounds(686, 126, 140, 42);

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel3.setText("Product");
        jPanel14.add(jLabel3);
        jLabel3.setBounds(462, 84, 84, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel4.setText("Total");
        jPanel14.add(jLabel4);
        jLabel4.setBounds(700, 84, 70, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("----------------------");
        jPanel14.add(jLabel5);
        jLabel5.setBounds(672, 112, 126, 14);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("----------------------");
        jPanel14.add(jLabel6);
        jLabel6.setBounds(448, 112, 126, 14);

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-left-30.png"))); // NOI18N
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel14.add(jLabel24);
        jLabel24.setBounds(854, 0, 42, 42);

        jPanel1.add(jPanel14);
        jPanel14.setBounds(0, 0, 952, 182);

        jTable1list.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable1list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1listMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1list);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(0, 182, 294, 504);

        jTable1finaldetails.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable1finaldetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable1finaldetails);

        jPanel1.add(jScrollPane6);
        jScrollPane6.setBounds(294, 182, 602, 504);

        jPanel23.add(jPanel1, "card8");

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));
        jPanel6.setLayout(null);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(null);

        jTextField1editItem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField1editItem.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1editItem.setText("Item");
        jTextField1editItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1editItemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1editItemFocusLost(evt);
            }
        });
        jTextField1editItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField1editItemMouseExited(evt);
            }
        });
        jTextField1editItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1editItemActionPerformed(evt);
            }
        });
        jPanel13.add(jTextField1editItem);
        jTextField1editItem.setBounds(112, 98, 168, 42);

        jComboBox1EditItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1EditItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1EditItemActionPerformed(evt);
            }
        });
        jPanel13.add(jComboBox1EditItem);
        jComboBox1EditItem.setBounds(126, 56, 112, 28);

        jTextField2bbbb.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField2bbbb.setForeground(new java.awt.Color(153, 153, 153));
        jTextField2bbbb.setText("Brand");
        jTextField2bbbb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2bbbbFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2bbbbFocusLost(evt);
            }
        });
        jTextField2bbbb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2bbbbMouseClicked(evt);
            }
        });
        jTextField2bbbb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2bbbbKeyPressed(evt);
            }
        });
        jPanel13.add(jTextField2bbbb);
        jTextField2bbbb.setBounds(336, 98, 168, 42);

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(153, 153, 153));
        jTextField3.setText("Quantity");
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });
        jPanel13.add(jTextField3);
        jTextField3.setBounds(574, 98, 154, 42);

        jButton14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton14.setText("Edit");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton14);
        jButton14.setBounds(616, 154, 70, 28);

        jComboBox2deititemdetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox2deititemdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2deititemdetailsActionPerformed(evt);
            }
        });
        jPanel13.add(jComboBox2deititemdetails);
        jComboBox2deititemdetails.setBounds(364, 56, 112, 28);

        jButton15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton15.setText("Delete");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton15);
        jButton15.setBounds(378, 154, 98, 31);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-left-30.png"))); // NOI18N
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });
        jPanel13.add(jLabel20);
        jLabel20.setBounds(854, 0, 42, 42);

        jPanel6.add(jPanel13);
        jPanel13.setBounds(0, 0, 896, 224);

        jTable1detailsofItem.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable1detailsofItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jTable1detailsofItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1detailsofItemMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable1detailsofItem);

        jPanel6.add(jScrollPane4);
        jScrollPane4.setBounds(0, 224, 896, 462);

        jPanel23.add(jPanel6, "card7");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        jTable2222222.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable2222222.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2222222.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2222222MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTable2222222);

        jTable1Addbrand.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable1Addbrand.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable1Addbrand);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(jScrollPane8))
                .addGap(0, 184, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel12);
        jPanel12.setBounds(-42, 224, 960, 644);

        jTextFielddetailsitem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextFielddetailsitem.setForeground(new java.awt.Color(204, 204, 204));
        jTextFielddetailsitem.setText("Item");
        jTextFielddetailsitem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFielddetailsitemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFielddetailsitemFocusLost(evt);
            }
        });
        jTextFielddetailsitem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFielddetailsitemMouseExited(evt);
            }
        });
        jTextFielddetailsitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielddetailsitemActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFielddetailsitem);
        jTextFielddetailsitem.setBounds(280, 70, 182, 28);

        jComboBox1ShowItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1ShowItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ShowItemActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox1ShowItem);
        jComboBox1ShowItem.setBounds(504, 70, 140, 28);

        jTextField2brandname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField2brandname.setForeground(new java.awt.Color(204, 204, 204));
        jTextField2brandname.setText("Brand");
        jTextField2brandname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2brandnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2brandnameFocusLost(evt);
            }
        });
        jPanel3.add(jTextField2brandname);
        jTextField2brandname.setBounds(252, 140, 182, 42);

        jTextField3Quantity.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField3Quantity.setForeground(new java.awt.Color(204, 204, 204));
        jTextField3Quantity.setText("Quantity");
        jTextField3Quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3QuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3QuantityFocusLost(evt);
            }
        });
        jTextField3Quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3QuantityKeyPressed(evt);
            }
        });
        jPanel3.add(jTextField3Quantity);
        jTextField3Quantity.setBounds(476, 140, 196, 42);

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);
        jButton4.setBounds(700, 154, 55, 25);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-left-30.png"))); // NOI18N
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel25);
        jLabel25.setBounds(854, 0, 42, 42);

        jPanel23.add(jPanel3, "card9");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        jTable1delete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable1delete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1deleteMouseClicked(evt);
            }
        });
        jTable1delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1deleteKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1delete);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 125, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel11);
        jPanel11.setBounds(0, 208, 952, 616);

        jTextField1delete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1delete.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1delete.setText("Item");
        jTextField1delete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1deleteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1deleteFocusLost(evt);
            }
        });
        jTextField1delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1deleteActionPerformed(evt);
            }
        });
        jTextField1delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1deleteKeyPressed(evt);
            }
        });
        jPanel4.add(jTextField1delete);
        jTextField1delete.setBounds(280, 84, 308, 42);

        jButton11.setText("Delete");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton11);
        jButton11.setBounds(392, 140, 69, 25);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-left-30.png"))); // NOI18N
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel17);
        jLabel17.setBounds(854, 0, 42, 42);

        jPanel23.add(jPanel4, "card6");

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setLayout(null);

        jPanel16.setBackground(new java.awt.Color(102, 102, 255));
        jPanel16.setLayout(null);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/ordermanagement.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        jPanel16.add(jLabel16);
        jLabel16.setBounds(0, 126, 560, 504);

        jPanel15.add(jPanel16);
        jPanel16.setBounds(0, 0, 546, 812);

        name.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        name.setForeground(new java.awt.Color(204, 204, 204));
        name.setText("User Name");
        name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 153)));
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFocusLost(evt);
            }
        });
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        jPanel15.add(name);
        name.setBounds(602, 280, 266, 42);

        jButton17.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton17.setText("Log in");
        jButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton17);
        jButton17.setBounds(672, 420, 112, 37);

        jPasswordField1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(204, 204, 204));
        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPasswordField1.setText("123456");
        jPasswordField1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 153), 1, true));
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });
        jPanel15.add(jPasswordField1);
        jPasswordField1.setBounds(602, 350, 266, 42);

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/e7a5cf5c9e.png"))); // NOI18N
        jPanel15.add(jLabel21);
        jLabel21.setBounds(672, 140, 112, 112);

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-user-30.png"))); // NOI18N
        jPanel15.add(jLabel22);
        jLabel22.setBounds(560, 280, 48, 42);

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-lock-30.png"))); // NOI18N
        jPanel15.add(jLabel23);
        jLabel23.setBounds(560, 350, 42, 42);

        jPanel23.add(jPanel15, "card9");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel5.setLayout(null);

        jPanel10.setBackground(new java.awt.Color(102, 102, 255));
        jPanel10.setLayout(null);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-home-page-100.png"))); // NOI18N
        jPanel10.add(jLabel7);
        jLabel7.setBounds(0, 0, 112, 98);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-logout-rounded-left-30.png"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jLabel8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel8KeyPressed(evt);
            }
        });
        jPanel10.add(jLabel8);
        jLabel8.setBounds(854, 14, 28, 28);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel18.setText(" Inventory Management  ");
        jPanel10.add(jLabel18);
        jLabel18.setBounds(196, 28, 560, 56);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel19.setText("System");
        jPanel10.add(jLabel19);
        jLabel19.setBounds(406, 98, 308, 70);

        jPanel5.add(jPanel10);
        jPanel10.setBounds(0, 0, 938, 238);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Add");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.add(jLabel9);
        jLabel9.setBounds(126, 406, 42, 16);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Delete");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.add(jLabel10);
        jLabel10.setBounds(112, 588, 84, 42);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Edit Details");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.add(jLabel11);
        jLabel11.setBounds(392, 602, 98, 22);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Item List");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.add(jLabel12);
        jLabel12.setBounds(700, 406, 98, 22);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Add Details");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.add(jLabel13);
        jLabel13.setBounds(392, 406, 112, 22);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Statement");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.add(jLabel14);
        jLabel14.setBounds(686, 602, 84, 16);

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-plus-64.png"))); // NOI18N
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);
        jButton3.setBounds(56, 308, 168, 126);

        jButton4AddDetails.setBackground(new java.awt.Color(204, 204, 255));
        jButton4AddDetails.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton4AddDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-add-64(1).png"))); // NOI18N
        jButton4AddDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4AddDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4AddDetailsActionPerformed(evt);
            }
        });
        jPanel5.add(jButton4AddDetails);
        jButton4AddDetails.setBounds(350, 308, 168, 126);

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-list-64.png"))); // NOI18N
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5);
        jButton5.setBounds(644, 308, 168, 126);

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-trash-64.png"))); // NOI18N
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6);
        jButton6.setBounds(56, 504, 168, 126);

        jButton7.setBackground(new java.awt.Color(204, 204, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-edit-file-64.png"))); // NOI18N
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7);
        jButton7.setBounds(350, 504, 168, 126);

        jButton8.setBackground(new java.awt.Color(204, 204, 255));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-purchase-order-80.png"))); // NOI18N
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8);
        jButton8.setBounds(644, 504, 168, 126);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel30.setText("Reset");
        jPanel5.add(jLabel30);
        jLabel30.setBounds(798, 238, 42, 42);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-synchronize-25.png"))); // NOI18N
        jLabel31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel31);
        jLabel31.setBounds(854, 238, 28, 42);

        jPanel23.add(jPanel5, "card4");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(null);

        jTextField1filename.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField1filename.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1filename.setText("Item");
        jTextField1filename.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1filenameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1filenameFocusLost(evt);
            }
        });
        jTextField1filename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1filenameActionPerformed(evt);
            }
        });
        jTextField1filename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1filenameKeyPressed(evt);
            }
        });
        jPanel8.add(jTextField1filename);
        jTextField1filename.setBounds(308, 70, 228, 51);

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton2);
        jButton2.setBounds(378, 140, 79, 25);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-left-30.png"))); // NOI18N
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel8.add(jLabel15);
        jLabel15.setBounds(854, 0, 56, 42);

        jPanel2.add(jPanel8);
        jPanel8.setBounds(0, -1, 896, 224);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jTable1Addlist.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable1Addlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1Addlist.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1Addlist);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 134, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel9);
        jPanel9.setBounds(0, 210, 952, 616);

        jPanel23.add(jPanel2, "card5");

        jPanel17.setLayout(null);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-left-30.png"))); // NOI18N
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });
        jPanel17.add(jLabel26);
        jLabel26.setBounds(854, 0, 42, 42);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane7.setViewportView(jTextArea1);

        jPanel17.add(jScrollPane7);
        jScrollPane7.setBounds(14, 98, 868, 560);

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton1);
        jButton1.setBounds(770, 70, 79, 25);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel27.setText("Statement");
        jPanel17.add(jLabel27);
        jLabel27.setBounds(392, 56, 280, 28);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
        );

        jPanel23.add(jPanel7, "card10");

        jPanel20.setLayout(null);

        jPanel22.setBackground(new java.awt.Color(153, 153, 255));
        jPanel22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel22KeyPressed(evt);
            }
        });
        jPanel22.setLayout(null);

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setLayout(null);

        jPasswordField2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPasswordField2.setForeground(new java.awt.Color(204, 204, 204));
        jPasswordField2.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPasswordField2.setText("123456");
        jPasswordField2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 153), 1, true));
        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusLost(evt);
            }
        });
        jPasswordField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField2ActionPerformed(evt);
            }
        });
        jPasswordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyPressed(evt);
            }
        });
        jPanel21.add(jPasswordField2);
        jPasswordField2.setBounds(210, 294, 266, 42);

        name1.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        name1.setForeground(new java.awt.Color(204, 204, 204));
        name1.setText("User Name");
        name1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 153)));
        name1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                name1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                name1FocusLost(evt);
            }
        });
        name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name1ActionPerformed(evt);
            }
        });
        jPanel21.add(name1);
        name1.setBounds(210, 210, 266, 42);

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/e7a5cf5c9e.png"))); // NOI18N
        jPanel21.add(jLabel32);
        jLabel32.setBounds(280, 70, 112, 112);

        jButton18.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton18.setText("Reset");
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton18);
        jButton18.setBounds(280, 364, 112, 37);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-user-30.png"))); // NOI18N
        jPanel21.add(jLabel33);
        jLabel33.setBounds(168, 210, 48, 42);

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-lock-30.png"))); // NOI18N
        jPanel21.add(jLabel34);
        jLabel34.setBounds(168, 294, 42, 42);

        jPanel22.add(jPanel21);
        jPanel21.setBounds(126, 140, 672, 476);

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel35.setText("It will delete all data from pc");
        jPanel22.add(jLabel35);
        jLabel35.setBounds(280, 84, 350, 29);

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8-logout-rounded-left-30.png"))); // NOI18N
        jLabel36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });
        jPanel22.add(jLabel36);
        jLabel36.setBounds(840, 14, 42, 42);

        jPanel20.add(jPanel22);
        jPanel22.setBounds(0, 0, 938, 798);

        jPanel23.add(jPanel20, "card11");

        getContentPane().add(jPanel23, "card12");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
        if (name.getText().equals("User Name")) {
            name.setText("");
            name.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_nameFocusGained

    private void nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusLost
        if (name.getText().equals("")) {
            name.setText("User Name");
            name.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_nameFocusLost

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed

        try {
            BufferedReader br = new BufferedReader(new FileReader(fp+"Reset.txt"));
            String s = br.readLine();
            if (s.equals("1")) {
                String username = name.getText();
                String pass = jPasswordField1.getText();

                if (username.equals("Admin") && pass.equals("1234")) {
                    jPanel23.removeAll();
                    jPanel23.repaint();
                    jPanel23.revalidate();

                    jPanel23.add(jPanel5);
                    jPanel23.repaint();
                    jPanel23.revalidate();
                } else {
                    JOptionPane.showMessageDialog(null, "invalid password or username");
                }

            } else {

            }
            br.close();
        } catch (Exception Ex) {
            String username = name.getText();
            String pass = jPasswordField1.getText();
            if (username.equals("Admin") && pass.equals("1234")) {
                jPanel23.removeAll();
                jPanel23.repaint();
                jPanel23.revalidate();

                jPanel23.add(jPanel18);
                jPanel23.repaint();
                jPanel23.revalidate();
            } else {
                JOptionPane.showMessageDialog(null, "invalid password or username");
            }
            System.out.println("not found");

        }

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        if (jPasswordField1.getText().equals("123456")) {
            jPasswordField1.setText("");
            jPasswordField1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        if (jPasswordField1.getText().equals("")) {
            jPasswordField1.setText("123456");
            jPasswordField1.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                BufferedReader br = new BufferedReader(new FileReader(fp+"Reset.txt"));
                String s = br.readLine();
                if (s.equals("1")) {
                    String username = name.getText();
                    String pass = jPasswordField1.getText();

                    if (username.equals("Admin") && pass.equals("1234")) {
                        jPanel23.removeAll();
                        jPanel23.repaint();
                        jPanel23.revalidate();

                        jPanel23.add(jPanel5);
                        jPanel23.repaint();
                        jPanel23.revalidate();
                    } else {
                        JOptionPane.showMessageDialog(null, "invalid password or username");
                    }

                } else {

                }
                br.close();
            } catch (Exception Ex) {
                String username = name.getText();
                String pass = jPasswordField1.getText();
                if (username.equals("Admin") && pass.equals("1234")) {
                    jPanel23.removeAll();
                    jPanel23.repaint();
                    jPanel23.revalidate();

                    jPanel23.add(jPanel18);
                    jPanel23.repaint();
                    jPanel23.revalidate();
                } else {
                    JOptionPane.showMessageDialog(null, "invalid password or username");
                }
                System.out.println("not found");

            }

        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jTextField1editItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1editItemFocusGained
        if (jTextField1editItem.getText().equals("Item")) {
            jTextField1editItem.setText("");
            jTextField1editItem.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField1editItemFocusGained

    private void jTextField1editItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1editItemFocusLost
        if (jTextField1editItem.getText().equals("")) {
            jTextField1editItem.setText("Item");
            jTextField1editItem.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField1editItemFocusLost

    private void jTextField1editItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1editItemMouseExited
        String j = jTextField1editItem.getText();
        jComboBox1EditItem.setSelectedItem(j);
        int y = 0;

        try {

            BufferedWriter b = new BufferedWriter(new FileWriter(fp + "forDetails.txt"));
            b.write(j);
            b.close();
            BufferedReader b1 = new BufferedReader(new FileReader(fpp + j + ".txt"));
            String s;
            DefaultComboBoxModel model1 = new DefaultComboBoxModel();
            while ((s = b1.readLine()) != null) {
                y = 1;
                String a[] = s.split(",");
                model1.addElement(a[0]);
                jComboBox2deititemdetails.setModel(model1);

            }
            b1.close();
            if (y == 0) {
                model1.addElement("---");
                jComboBox2deititemdetails.setModel(model1);
            }

        } catch (Exception ex) {

        }
        String q = jTextField1editItem.getText();
        jTable1detailsofItem.setModel(new DefaultTableModel(null, new String[]{}));
        // jTextFielddetailsitem.setText((String)jComboBox1ShowItem.getSelectedItem());

        try {

            String filePath = fpp + q + ".txt";
            File file = new File(filePath);
            //
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {q, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1detailsofItem.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1detailsofItem.setRowHeight(40);
            jTable1detailsofItem.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jTextField1editItemMouseExited

    private void jTextField1editItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1editItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1editItemActionPerformed

    private void jComboBox1EditItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1EditItemActionPerformed

        jTextField1editItem.setText((String) jComboBox1EditItem.getSelectedItem());
        jTextField1editItem.setForeground(new Color(0, 0, 0));
        String j = (String) jComboBox1EditItem.getSelectedItem();
        int y = 0;
        try {
            BufferedWriter b = new BufferedWriter(new FileWriter(fp + "forDetails.txt"));
            b.write(j);
            b.close();
            BufferedReader b1 = new BufferedReader(new FileReader(fpp + j + ".txt"));
            String s;
            DefaultComboBoxModel model1 = new DefaultComboBoxModel();
            while ((s = b1.readLine()) != null) {
                y = 1;
                String a[] = s.split(",");
                model1.addElement(a[0]);
                jComboBox2deititemdetails.setModel(model1);

            }
            b1.close();
            if (y == 0) {
                model1.addElement("---");
                jComboBox2deititemdetails.setModel(model1);
            }

        } catch (Exception ex) {

        }
        // jTable1Addbrand.setModel(new DefaultTableModel(null,new String[] {}));
        //jTextFielddetailsitem.setText((String)jComboBox1ShowItem.getSelectedItem());
        String q = jTextField1editItem.getText();
        jTable1detailsofItem.setModel(new DefaultTableModel(null, new String[]{}));
        // jTextFielddetailsitem.setText((String)jComboBox1ShowItem.getSelectedItem());

        try {

            String filePath = fpp + q + ".txt";
            File file = new File(filePath);
            //
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {q, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1detailsofItem.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1detailsofItem.setRowHeight(40);
            jTable1detailsofItem.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }

    }//GEN-LAST:event_jComboBox1EditItemActionPerformed

    private void jTextField2bbbbFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2bbbbFocusGained
        if (jTextField2bbbb.getText().equals("Brand")) {
            jTextField2bbbb.setText("");
            jTextField2bbbb.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField2bbbbFocusGained

    private void jTextField2bbbbFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2bbbbFocusLost
        if (jTextField2bbbb.getText().equals("")) {
            jTextField2bbbb.setText("Brand");
            jTextField2bbbb.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField2bbbbFocusLost

    private void jTextField2bbbbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2bbbbMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2bbbbMouseClicked

    private void jTextField2bbbbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2bbbbKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            String n, q;
            n = (String) jComboBox2deititemdetails.getSelectedItem();
            q = jTextField2bbbb.getText();
            String j = (String) jComboBox1EditItem.getSelectedItem();
            String Filepath = fpp + j + ".txt";
            String tempfile = fpp + "temp1.txt";

            File oldFile = new File(Filepath);
            File newFile = new File(tempfile);
            int i = 0;
            DefaultComboBoxModel model1 = new DefaultComboBoxModel();

            try {

                FileWriter fw = new FileWriter(tempfile, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pr = new PrintWriter(bw);
                BufferedReader br = new BufferedReader(new FileReader(Filepath));
                String s1;

                File file1 = new File(fpp + "Statement.txt");
                FileWriter fw1 = new FileWriter(file1, true);
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pr1 = new PrintWriter(bw1);

                while ((s1 = br.readLine()) != null) {

                    String a[] = s1.split(",");
                    if (a[0].equals(q)) {
                        model1.addElement("--");
                        jComboBox2deititemdetails.setModel(model1);
                        i = 1;

                        pr1.print("* " + "Item: " + j + ", Brand: " + q + "(Removed in " + formattedDate + ")");
                        pr1.println("");
                    } else {
                        pr.print(s1);
                        pr.println();

                        model1.addElement(a[0]);
                        jComboBox2deititemdetails.setModel(model1);

                    }

                }

                br.close();
                pr.flush();
                pr.close();
                pr1.flush();
                pr1.close();
                oldFile.delete();
                File f = new File(Filepath);
                newFile.renameTo(f);

                if (n.equals(null)) {
                    JOptionPane.showMessageDialog(null, "Enter item name");
                } else if (i == 0) {
                    JOptionPane.showMessageDialog(null, "Item not Found");
                }

            } catch (Exception ex) {
                System.out.println("not written");
            }
            jTextField2bbbb.setText("");

            String w = jTextField1editItem.getText();
            jTable1detailsofItem.setModel(new DefaultTableModel(null, new String[]{w, "Quantity", "Entry date"}));

            try {

                String filePath = fpp + w + ".txt";
                File file = new File(filePath);
                //
                BufferedReader br = new BufferedReader(new FileReader(file));

                String[] columnsName = {w, "Quantity", "Entry date"};

                DefaultTableModel model = (DefaultTableModel) jTable1detailsofItem.getModel();
                model.setColumnIdentifiers(columnsName);

                jTable1detailsofItem.setRowHeight(40);
                jTable1detailsofItem.setEnabled(true);
                Object[] tableLines = br.lines().toArray();

                for (int k = 0; k < tableLines.length; k++) {
                    String line = tableLines[k].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
                br.close();
            } catch (Exception Ex) {
                System.out.println("not written");
            }
        }
    }//GEN-LAST:event_jTextField2bbbbKeyPressed

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        if (jTextField3.getText().equals("Quantity")) {
            jTextField3.setText("");
            jTextField3.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        if (jTextField3.getText().equals("")) {
            jTextField3.setText("Quantity");
            jTextField3.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String n, q, Q;
            n = jTextField2bbbb.getText();
            q = jTextField3.getText();

            String j = jTextField1editItem.getText();
            String Filepath = fpp + j + ".txt";
            String tempfile = fpp + "temp1.txt";

            File oldFile = new File(Filepath);
            File newFile = new File(tempfile);
            int i = 0;
            DefaultComboBoxModel model1 = new DefaultComboBoxModel();

            try {

                FileWriter fw = new FileWriter(tempfile, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pr = new PrintWriter(bw);
                BufferedReader br = new BufferedReader(new FileReader(Filepath));
                String s1;

                File file1 = new File(fpp + "Statement.txt");
                FileWriter fw1 = new FileWriter(file1, true);
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pr1 = new PrintWriter(bw1);

                while ((s1 = br.readLine()) != null) {

                    String a[] = s1.split(",");
                    if (a[0].equals(n)) {
                        pr.print(a[0]);
                        pr.print("," + q);
                        pr.print("," + formattedDate);

                        pr.println();
                        i = 1;
                        pr1.print("* " + "Item: " + j + ", Brand: " + n + ", Quantity: " + q + "(Updated in " + formattedDate + ")");
                        pr1.println("");
                    } else {
                        pr.print(s1);
                        pr.println();

                    }
                }

                br.close();
                pr.flush();
                pr.close();
                pr1.flush();
                pr1.close();
                oldFile.delete();
                File f = new File(Filepath);
                newFile.renameTo(f);

                if (n.equals(null)) {
                    JOptionPane.showMessageDialog(null, "Enter item name");
                } else if (i == 0) {
                    JOptionPane.showMessageDialog(null, "Item not Found");
                }

            } catch (Exception ex) {
                System.out.println("not written");
            }
            //jTextField2bbbb.setText("");
            jTextField3.setText("");
            String w = jTextField1editItem.getText();
            jTable1detailsofItem.setModel(new DefaultTableModel(null, new String[]{w, "Quantity", "Entry date"}));

            try {

                String filePath = fpp + w + ".txt";
                File file = new File(filePath);
                //
                BufferedReader br = new BufferedReader(new FileReader(file));

                String[] columnsName = {w, "Quantity", "Entry date"};

                DefaultTableModel model = (DefaultTableModel) jTable1detailsofItem.getModel();
                model.setColumnIdentifiers(columnsName);

                jTable1detailsofItem.setRowHeight(40);
                jTable1detailsofItem.setEnabled(true);
                Object[] tableLines = br.lines().toArray();

                for (int k = 0; k < tableLines.length; k++) {
                    String line = tableLines[k].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
                br.close();
            } catch (Exception Ex) {
                System.out.println("not written");
            }
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String n, q, Q;
        n = jTextField2bbbb.getText();
        q = jTextField3.getText();

        String j = jTextField1editItem.getText();
        String Filepath = fpp + j + ".txt";
        String tempfile = fpp + "temp1.txt";

        File oldFile = new File(Filepath);
        File newFile = new File(tempfile);
        int i = 0;
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();

        try {

            FileWriter fw = new FileWriter(tempfile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pr = new PrintWriter(bw);
            BufferedReader br = new BufferedReader(new FileReader(Filepath));
            String s1;

            File file1 = new File(fpp + "Statement.txt");
            FileWriter fw1 = new FileWriter(file1, true);
            BufferedWriter bw1 = new BufferedWriter(fw1);
            PrintWriter pr1 = new PrintWriter(bw1);

            while ((s1 = br.readLine()) != null) {

                String a[] = s1.split(",");
                if (a[0].equals(n)) {
                    pr.print(a[0]);
                    pr.print("," + q);
                    pr.print("," + formattedDate);

                    pr.println();
                    i = 1;
                    pr1.print("* " + "Item: " + j + ", Brand: " + n + ", Quantity: " + q + "(Updated in " + formattedDate + ")");
                    pr1.println("");

                } else {
                    pr.print(s1);
                    pr.println();

                }
            }

            br.close();
            pr.flush();
            pr.close();
            pr1.flush();
            pr1.close();
            oldFile.delete();
            File f = new File(Filepath);
            newFile.renameTo(f);

            if (n.equals(null)) {
                JOptionPane.showMessageDialog(null, "Enter item name");
            } else if (i == 0) {
                JOptionPane.showMessageDialog(null, "Item not Found");
            }

        } catch (Exception ex) {
            System.out.println("not written");
        }
        //jTextField2bbbb.setText("");
        jTextField3.setText("");
        String w = jTextField1editItem.getText();
        jTable1detailsofItem.setModel(new DefaultTableModel(null, new String[]{w, "Quantity", "Entry date"}));

        try {

            String filePath = fpp + w + ".txt";
            File file = new File(filePath);
            //
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {w, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1detailsofItem.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1detailsofItem.setRowHeight(40);
            jTable1detailsofItem.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int k = 0; k < tableLines.length; k++) {
                String line = tableLines[k].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jComboBox2deititemdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2deititemdetailsActionPerformed
        jTextField2bbbb.setText((String) jComboBox2deititemdetails.getSelectedItem());
        jTextField2bbbb.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jComboBox2deititemdetailsActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        String n, q;
        n = (String) jComboBox2deititemdetails.getSelectedItem();
        q = jTextField2bbbb.getText();
        String j = (String) jComboBox1EditItem.getSelectedItem();
        String Filepath = fpp + j + ".txt";
        String tempfile = fpp + "temp1.txt";

        File oldFile = new File(Filepath);
        File newFile = new File(tempfile);
        int i = 0;
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();

        try {

            FileWriter fw = new FileWriter(tempfile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pr = new PrintWriter(bw);
            BufferedReader br = new BufferedReader(new FileReader(Filepath));
            String s1;

            File file1 = new File(fpp + "Statement.txt");
            FileWriter fw1 = new FileWriter(file1, true);
            BufferedWriter bw1 = new BufferedWriter(fw1);
            PrintWriter pr1 = new PrintWriter(bw1);

            while ((s1 = br.readLine()) != null) {

                String a[] = s1.split(",");
                if (a[0].equals(q)) {
                    model1.addElement("--");
                    jComboBox2deititemdetails.setModel(model1);
                    i = 1;
                    pr1.print("* " + "Item: " + j + ", Brand: " + q + "(Removed in " + formattedDate + ")");
                    pr1.println("");
                } else {
                    pr.print(s1);
                    pr.println();

                    model1.addElement(a[0]);
                    jComboBox2deititemdetails.setModel(model1);

                }

            }

            br.close();
            pr.flush();
            pr.close();
            pr1.flush();
            pr1.close();
            oldFile.delete();
            File f = new File(Filepath);
            newFile.renameTo(f);

            if (n.equals(null)) {
                JOptionPane.showMessageDialog(null, "Enter item name");
            } else if (i == 0) {
                JOptionPane.showMessageDialog(null, "Item not Found");
            }

        } catch (Exception ex) {
            System.out.println("not written");
        }
        jTextField2bbbb.setText("");

        String w = jTextField1editItem.getText();
        jTable1detailsofItem.setModel(new DefaultTableModel(null, new String[]{w, "Quantity", "Entry date"}));

        try {

            String filePath = fpp + w + ".txt";
            File file = new File(filePath);
            //
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {w, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1detailsofItem.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1detailsofItem.setRowHeight(40);
            jTable1detailsofItem.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int k = 0; k < tableLines.length; k++) {
                String line = tableLines[k].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked

        jTextField2bbbb.setText("Brand");
        jTextField3.setText("Quantity");
        jTextField1editItem.setText("Item");
        jTextField3.setForeground(new Color(153, 153, 153));
        jTextField1editItem.setForeground(new Color(153, 153, 153));
        jTextField2bbbb.setForeground(new Color(153, 153, 153));
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel5);
        jPanel23.repaint();
        jPanel23.revalidate();

    }//GEN-LAST:event_jLabel20MouseClicked

    private void jTable1detailsofItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1detailsofItemMouseClicked
        DefaultTableModel model1 = (DefaultTableModel) jTable1detailsofItem.getModel();
        int selectedRowIndex = jTable1detailsofItem.getSelectedRow();
        jTextField2bbbb.setText(model1.getValueAt(selectedRowIndex, 0).toString());
        jComboBox2deititemdetails.setSelectedItem(model1.getValueAt(selectedRowIndex, 0).toString());
        jTextField2bbbb.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jTable1detailsofItemMouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel15);
        jPanel23.repaint();
        jPanel23.revalidate();
        jPasswordField1.setText("123456");
        jPasswordField1.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel8KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        jTable1Addlist.setModel(new DefaultTableModel(null, new String[]{"Product"}));
        try {
            //
            //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
            //           String n=br1.readLine();
            //           br1.close();

            String filePath = fp + "name.txt";
            File file = new File(filePath);

            BufferedReader br = new BufferedReader(new FileReader(file));

            jPanel23.removeAll();
            jPanel23.repaint();
            jPanel23.revalidate();

            jPanel23.add(jPanel2);
            jPanel23.repaint();
            jPanel23.revalidate();

            String[] columnsName = {"Product"};

            DefaultTableModel model = (DefaultTableModel) jTable1Addlist.getModel();
            TableRowSorter< DefaultTableModel> s = new TableRowSorter< DefaultTableModel>(model);
            jTable1Addlist.setRowSorter(s);
            model.setColumnIdentifiers(columnsName);

            jTable1Addlist.setRowHeight(40);
            jTable1Addlist.setEnabled(false);
            Object[] tableLines = br.lines().toArray();
            JTable table = new JTable(model);
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            table.setRowSorter(sorter);

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");

                model.addRow(dataRow);
            }
            br.close();

        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4AddDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4AddDetailsActionPerformed

        DefaultComboBoxModel model1 = new DefaultComboBoxModel();

        try {
            BufferedReader b = new BufferedReader(new FileReader(fp + "name.txt"));
            String s;
            jPanel23.removeAll();
            jPanel23.repaint();
            jPanel23.revalidate();

            jPanel23.add(jPanel3);
            jPanel23.repaint();
            jPanel23.revalidate();
            while ((s = b.readLine()) != null) {
                model1.addElement(s);
                jComboBox1ShowItem.setModel(model1);
            }
            b.close();

        } catch (Exception ex) {

        }
        try {
            //
            //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
            //           String n=br1.readLine();
            //           br1.close();
            String filePath = fp + "name.txt";
            File file = new File(filePath);

            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {"Product"};

            DefaultTableModel model = (DefaultTableModel) jTable2222222.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable2222222.setRowHeight(40);
            jTable2222222.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");

                model.addRow(dataRow);

            }
            br.close();
            // TableRowSorter< DefaultTableModel> s=new TableRowSorter< DefaultTableModel>(model);
            //jTable1list.setRowSorter(s);
        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jButton4AddDetailsActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jTable1finaldetails.setModel(new DefaultTableModel(null, new String[]{"Quantity", "Entry date"}));
        jTable1list.setModel(new DefaultTableModel(null, new String[]{"Product",}));

        try {
            //
            //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
            //           String n=br1.readLine();
            //           br1.close();
            String filePath = fp + "name.txt";
            File file = new File(filePath);

            BufferedReader br = new BufferedReader(new FileReader(file));

            jPanel23.removeAll();
            jPanel23.repaint();
            jPanel23.revalidate();

            jPanel23.add(jPanel1);
            jPanel23.repaint();
            jPanel23.revalidate();

            String[] columnsName = {"Product"};

            DefaultTableModel model = (DefaultTableModel) jTable1list.getModel();
            TableRowSorter< DefaultTableModel> s = new TableRowSorter< DefaultTableModel>(model);
            jTable1list.setRowSorter(s);
            model.setColumnIdentifiers(columnsName);

            jTable1list.setRowHeight(40);
            jTable1list.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {

                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");

                model.addRow(dataRow);

            }
            br.close();

        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel4);
        jPanel23.repaint();
        jPanel23.revalidate();
        jTable1delete.setModel(new DefaultTableModel(null, new String[]{"Product"}));
        try {
//           
//           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
//           String n=br1.readLine();
//           br1.close();

            String filePath = fp + "name.txt";
            File file = new File(filePath);

            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {"Product"};

            DefaultTableModel model = (DefaultTableModel) jTable1delete.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1delete.setRowHeight(40);
            jTable1delete.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        DefaultComboBoxModel model1 = new DefaultComboBoxModel();

        try {

            BufferedReader b = new BufferedReader(new FileReader(fp + "name.txt"));
            String s;

            jPanel23.removeAll();
            jPanel23.repaint();
            jPanel23.revalidate();

            jPanel23.add(jPanel6);
            jPanel23.repaint();
            jPanel23.revalidate();
            while ((s = b.readLine()) != null) {
                model1.addElement(s);
                jComboBox1EditItem.setModel(model1);
            }
            b.close();

        } catch (Exception ex) {

        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        try {
            BufferedReader br = new BufferedReader(new FileReader(fpp + "Statement.txt"));

            jTextArea1.read(br, null);
            br.close();
            jTextArea1.requestFocus();

            jPanel23.removeAll();
            jPanel23.repaint();
            jPanel23.revalidate();

            jPanel23.add(jPanel7);
            jPanel23.repaint();
            jPanel23.revalidate();
        } catch (Exception ex) {
            System.out.println("adsdasd");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel20);
        jPanel23.repaint();
        jPanel23.revalidate();
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jTable2222222MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2222222MouseClicked
        DefaultTableModel model1 = (DefaultTableModel) jTable2222222.getModel();

        // get the selected row index
        int selectedRowIndex = jTable2222222.getSelectedRow();

        // set the selected row data into jtextfields
        jTextFielddetailsitem.setText(model1.getValueAt(selectedRowIndex, 0).toString());
        jTextFielddetailsitem.setForeground(new Color(0, 0, 0));
        jComboBox1ShowItem.setSelectedItem(model1.getValueAt(selectedRowIndex, 0).toString());
        String w = model1.getValueAt(selectedRowIndex, 0).toString();
        jTable1Addbrand.setModel(new DefaultTableModel(null, new String[]{w, "Quantity", "Entry date"}));
        try {

            String filePath = fpp + w + ".txt";
            File file = new File(filePath);
            //
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {w, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1Addbrand.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1Addbrand.setRowHeight(40);
            jTable1Addbrand.setEnabled(false);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }
    }//GEN-LAST:event_jTable2222222MouseClicked

    private void jTextFielddetailsitemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFielddetailsitemFocusGained
        if (jTextFielddetailsitem.getText().equals("Item")) {
            jTextFielddetailsitem.setText("");
            jTextFielddetailsitem.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextFielddetailsitemFocusGained

    private void jTextFielddetailsitemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFielddetailsitemFocusLost
        if (jTextFielddetailsitem.getText().equals("")) {
            jTextFielddetailsitem.setText("Item");
            jTextFielddetailsitem.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextFielddetailsitemFocusLost

    private void jTextFielddetailsitemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFielddetailsitemMouseExited

        String q = jTextFielddetailsitem.getText();

        jComboBox1ShowItem.setSelectedItem(q);
        int k = 0;
        try {
            String str = jTextFielddetailsitem.getText();
            // jLabel22.setText(str);
            BufferedWriter writer = new BufferedWriter(new FileWriter(fp + "forDetails.txt"));
            writer.write(q);
            writer.close();

            BufferedReader br1 = new BufferedReader(new FileReader(fp + "name.txt"));
            String ss;
            // if(str.equals(new BufferedReader(new FileReader(str+".txt")))){
            int i = 0, j = 0;
            while ((ss = br1.readLine()) != null) {
                k++;
                if (str.equals(ss)) {

                }

            }

            //               if(i==1&&j==k){
            //                   JOptionPane.showMessageDialog(null,"Item not Found");
            //                }
            br1.close();

        } catch (Exception ex) {
            System.out.println("not written");
        }

    }//GEN-LAST:event_jTextFielddetailsitemMouseExited

    private void jTextFielddetailsitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielddetailsitemActionPerformed

    }//GEN-LAST:event_jTextFielddetailsitemActionPerformed

    private void jComboBox1ShowItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ShowItemActionPerformed
        //jTable1Addbrand.setModel(new DefaultTableModel(null,new String[] {}));

        jTable1Addbrand.setModel(new DefaultTableModel(null, new String[]{}));
        jTextFielddetailsitem.setText((String) jComboBox1ShowItem.getSelectedItem());
        jTextFielddetailsitem.setForeground(new Color(0, 0, 0));
        String q = jTextFielddetailsitem.getText();
        try {

            //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
            //           String n=br1.readLine();
            //           br1.close();
            String filePath = q + ".txt";
            File file = new File(filePath);
            //              DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            //              Object[] lines=br.lines().toArray();
            //              for(int i=0;i<lines.length;i++){
            //                  String[] row=lines[i].toString().split(",");
            //                          model.addRow(row);
            //              }
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {q, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1Addbrand.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1Addbrand.setRowHeight(40);
            jTable1Addbrand.setEnabled(false);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }

    }//GEN-LAST:event_jComboBox1ShowItemActionPerformed

    private void jTextField2brandnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2brandnameFocusGained
        if (jTextField2brandname.getText().equals("Brand")) {
            jTextField2brandname.setText("");
            jTextField2brandname.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField2brandnameFocusGained

    private void jTextField2brandnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2brandnameFocusLost
        if (jTextField2brandname.getText().equals("")) {
            jTextField2brandname.setText("Brand");
            jTextField2brandname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField2brandnameFocusLost

    private void jTextField3QuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3QuantityFocusGained
        if (jTextField3Quantity.getText().equals("Quantity")) {
            jTextField3Quantity.setText("");
            jTextField3Quantity.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField3QuantityFocusGained

    private void jTextField3QuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3QuantityFocusLost
        if (jTextField3Quantity.getText().equals("")) {
            jTextField3Quantity.setText("Quantity");
            jTextField3Quantity.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField3QuantityFocusLost

    private void jTextField3QuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3QuantityKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String n, q;
            String w = jTextFielddetailsitem.getText();
            n = jTextField2brandname.getText();
            q = jTextField3Quantity.getText();
            try {
                if (n.equals("Brand Name") || n.equals("") || q.equals("Quantity") || q.equals("")) {
                    JOptionPane.showMessageDialog(null, "Enter Details");
                } else {
                    //                BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
                    //                String s=br1.readLine();

                    File file = new File(fpp + w + ".txt");
                    FileWriter fr = new FileWriter(file, true);
                    BufferedWriter br = new BufferedWriter(fr);
                    PrintWriter pr = new PrintWriter(br);
                    pr.print(n);
                    pr.print("," + q);

                    pr.print("," + formattedDate);
                    pr.println("");

                    File file1 = new File(fpp + "Statement.txt");
                    FileWriter fw1 = new FileWriter(file1, true);
                    BufferedWriter bw1 = new BufferedWriter(fw1);
                    PrintWriter pr1 = new PrintWriter(bw1);

                    pr1.print("* " + "Item: " + w + ", Brand: " + n + ", Quantity: " + q + " (Added in " + formattedDate + ")");
                    pr1.println("");
                    // br1.close();
                    pr.flush();
                    pr.close();
                    pr1.flush();
                    pr1.close();

                    jTextField2brandname.setText("");
                    jTextField3Quantity.setText("");
                    DefaultTableModel model = (DefaultTableModel) jTable1Addbrand.getModel();
                    model.addRow(new Object[]{n, q, formattedDate});
                }
            } catch (Exception e) {
                System.out.println("in adddetails");
            }
        }
    }//GEN-LAST:event_jTextField3QuantityKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String n, q;
        String w = jTextFielddetailsitem.getText();
        n = jTextField2brandname.getText();
        q = jTextField3Quantity.getText();
        try {
            if (n.equals("Brand Name") || n.equals("") || q.equals("Quantity") || q.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter Details");
            } else {
                //                BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
                //                String s=br1.readLine();

                File file = new File(fpp + w + ".txt");
                FileWriter fr = new FileWriter(file, true);
                BufferedWriter br = new BufferedWriter(fr);
                PrintWriter pr = new PrintWriter(br);
                pr.print(n);
                pr.print("," + q);

                pr.print("," + formattedDate);
                pr.println("");

                File file1 = new File(fpp + "Statement.txt");
                FileWriter fw1 = new FileWriter(file1, true);
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pr1 = new PrintWriter(bw1);

                pr1.print("* " + "Item: " + w + ", Brand: " + n + ", Quantity: " + q + " (Added in " + formattedDate + ")");
                pr1.println("");
                // br1.close();
                pr.flush();
                pr.close();
                pr1.flush();
                pr1.close();

                jTextField2brandname.setText("");
                jTextField3Quantity.setText("");
                DefaultTableModel model = (DefaultTableModel) jTable1Addbrand.getModel();
                model.addRow(new Object[]{n, q, formattedDate});
            }
        } catch (Exception e) {
            System.out.println("in adddetails");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked

        jTextFielddetailsitem.setText(null);
        // jTextField2brandname.setText("Brand");
        jTextFielddetailsitem.setText("Item");
        jTextFielddetailsitem.setForeground(new Color(153, 153, 153));
        DefaultComboBoxModel b = new DefaultComboBoxModel();
        jComboBox1ShowItem.setModel(b);
        String q = jTextFielddetailsitem.getText();
        jTable1Addbrand.setModel(new DefaultTableModel(null, new String[]{q, "Quantity", "Entry date"}));
        jTable2222222.setModel(new DefaultTableModel(null, new String[]{"Product"}));

        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel5);
        jPanel23.repaint();
        jPanel23.revalidate();
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jTextField1filenameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1filenameFocusGained
        if (jTextField1filename.getText().equals("Item")) {
            jTextField1filename.setText("");
            jTextField1filename.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField1filenameFocusGained

    private void jTextField1filenameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1filenameFocusLost
        if (jTextField1filename.getText().equals("")) {
            jTextField1filename.setText("Item");
            jTextField1filename.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField1filenameFocusLost

    private void jTextField1filenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1filenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1filenameActionPerformed

    private void jTextField1filenameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1filenameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String s1 = jTextField1filename.getText();
            String a;
            int i = 0;
            File productname = new File(fp + "name.txt");
            File dname = new File(fp + "forDetails.txt");
            try {

                if ((s1.equals("")) || (s1.equals("Item"))) {
                    JOptionPane.showMessageDialog(null, "Enter item name");
                    i = 1;
                }
                BufferedReader br1 = new BufferedReader(new FileReader(productname));
                while ((a = br1.readLine()) != null) {
                    if (s1.equals(a)) {
                        JOptionPane.showMessageDialog(null, "Item already exist");
                        i = 1;
                        br1.close();
                    }
                }
                System.out.println(i);
                if (i == 0) {

                    BufferedWriter writer = new BufferedWriter(new FileWriter(fpp + s1 + ".txt"));
                    writer.close();
                    File file = new File(fp + "name.txt");

                    FileWriter fr = new FileWriter(file, true);
                    BufferedWriter bw = new BufferedWriter(fr);
                    PrintWriter pr = new PrintWriter(bw);
                    pr.print(s1);
                    pr.println("");

                    File file1 = new File(fpp + "Statement.txt");
                    FileWriter fw1 = new FileWriter(file1, true);
                    BufferedWriter bw1 = new BufferedWriter(fw1);
                    PrintWriter pr1 = new PrintWriter(bw1);
                    pr1.print("* New item " + s1 + " added" + "(" + formattedDate + ")");
                    pr1.println("");

                    br1.close();
                    pr.flush();
                    pr.close();
                    pr1.flush();
                    pr1.close();
                    DefaultTableModel model = (DefaultTableModel) jTable1Addlist.getModel();
                    jTextField1filename.setText(null);

                    model.addRow(new Object[]{s1});

                    DefaultTableModel model1 = (DefaultTableModel) jTable1delete.getModel();

                    model1.addRow(new Object[]{s1});

                }

            } catch (Exception ex) {
                System.out.println("jTable");
            }

        }

    }//GEN-LAST:event_jTextField1filenameKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String s1 = jTextField1filename.getText();
        String a;
        int i = 0;

        File productname = new File(fp + "name.txt");
        File dname = new File(fp + "forDetails.txt");
        try {

            if ((s1.equals("")) || (s1.equals("Item"))) {
                JOptionPane.showMessageDialog(null, "Enter item name");
                i = 1;
            }
            BufferedReader br1 = new BufferedReader(new FileReader(productname));
            while ((a = br1.readLine()) != null) {
                if (s1.equals(a)) {
                    JOptionPane.showMessageDialog(null, "Item already exist");
                    i = 1;
                    br1.close();
                }
            }
            System.out.println(i);
            if (i == 0) {

                BufferedWriter writer = new BufferedWriter(new FileWriter(fpp + s1 + ".txt"));
                writer.close();
                File file = new File(fp + "name.txt");

                FileWriter fr = new FileWriter(file, true);
                BufferedWriter bw = new BufferedWriter(fr);
                PrintWriter pr = new PrintWriter(bw);
                pr.print(s1);
                pr.println("");

                File file1 = new File(fpp + "Statement.txt");
                FileWriter fw1 = new FileWriter(file1, true);
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pr1 = new PrintWriter(bw1);
                pr1.print("* New item " + s1 + " added" + "(" + formattedDate + ")");
                pr1.println("");

                br1.close();
                pr.flush();
                pr.close();
                pr1.flush();
                pr1.close();
                DefaultTableModel model = (DefaultTableModel) jTable1Addlist.getModel();
                jTextField1filename.setText(null);

                model.addRow(new Object[]{s1});
                DefaultTableModel model1 = (DefaultTableModel) jTable1delete.getModel();

                model1.addRow(new Object[]{s1
                });

            }

        } catch (Exception ex) {
            System.out.println("jTable");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel5);
        jPanel23.repaint();
        jPanel23.revalidate();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jTable1deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1deleteMouseClicked
        DefaultTableModel model1 = (DefaultTableModel) jTable1delete.getModel();
        int selectedRowIndex = jTable1delete.getSelectedRow();
        jTextField1delete.setText(model1.getValueAt(selectedRowIndex, 0).toString());
        jTextField1delete.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jTable1deleteMouseClicked

    private void jTable1deleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1deleteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String str = jTextField1delete.getText();
            String Filepath = fp + "name.txt";
            String tempfile = fp + "temp.txt";
            File item = new File(fpp + str + ".txt");
            File oldFile = new File(Filepath);
            File newFile = new File(tempfile);
            int i = 0;
            try {

                FileWriter fw = new FileWriter(tempfile, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pr = new PrintWriter(bw);
                BufferedReader br = new BufferedReader(new FileReader(Filepath));
                String s1;

                File file = new File(fpp + "Statement.txt");
                FileWriter fw1 = new FileWriter(file, true);
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pr1 = new PrintWriter(bw1);

                while ((s1 = br.readLine()) != null) {
                    if (s1.equals(str)) {
                        item.delete();

                        jTextField1delete.setText(null);

                        pr1.print("* " + str + " has been removed" + "(" + formattedDate + ")");
                        pr1.println("");

                        i = 1;
                    } else {
                        pr.print(s1);
                        pr.println();
                    }
                }

                br.close();
                pr.flush();
                pr.close();
                pr1.flush();
                pr1.close();
                oldFile.delete();
                File f = new File(Filepath);
                newFile.renameTo(f);

                if ((str.equals("Item")) || str.equals(null)) {
                    JOptionPane.showMessageDialog(null, "Enter item name");
                } else if (i == 0) {
                    JOptionPane.showMessageDialog(null, "Item not Found");
                }

            } catch (Exception ex) {
                System.out.println("not written");
            }
            jTable1delete.setModel(new DefaultTableModel(null, new String[]{"Product"}));
            try {
                //
                //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
                //           String n=br1.readLine();
                //           br1.close();
                String filePath = fp + "name.txt";
                File file = new File(filePath);

                BufferedReader br = new BufferedReader(new FileReader(file));

                String[] columnsName = {"Product"};

                DefaultTableModel model = (DefaultTableModel) jTable1delete.getModel();
                model.setColumnIdentifiers(columnsName);

                jTable1delete.setRowHeight(40);
                jTable1delete.setEnabled(true);
                Object[] tableLines = br.lines().toArray();

                for (int j = 0; j < tableLines.length; j++) {
                    String line = tableLines[j].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
                br.close();
            } catch (Exception Ex) {
                System.out.println("not written");
            }

            DefaultTableModel model = (DefaultTableModel) jTable1delete.getModel();

        }
    }//GEN-LAST:event_jTable1deleteKeyPressed

    private void jTextField1deleteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1deleteFocusGained
        if (jTextField1delete.getText().equals("Item")) {
            jTextField1delete.setText("");
            jTextField1delete.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField1deleteFocusGained

    private void jTextField1deleteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1deleteFocusLost
        if (jTextField1delete.getText().equals("")) {
            jTextField1delete.setText("Item");
            jTextField1delete.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField1deleteFocusLost

    private void jTextField1deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1deleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1deleteActionPerformed

    private void jTextField1deleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1deleteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String str = jTextField1delete.getText();
            String Filepath = fp + "name.txt";
            String tempfile = fp + "temp.txt";
            File item = new File(fpp + str + ".txt");
            File oldFile = new File(Filepath);
            File newFile = new File(tempfile);
            int i = 0;
            try {

                FileWriter fw = new FileWriter(tempfile, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pr = new PrintWriter(bw);
                BufferedReader br = new BufferedReader(new FileReader(Filepath));

                File file = new File(fpp + "Statement.txt");
                FileWriter fw1 = new FileWriter(file, true);
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pr1 = new PrintWriter(bw1);

                String s1;
                while ((s1 = br.readLine()) != null) {
                    if (s1.equals(str)) {
                        item.delete();

                        jTextField1delete.setText(null);

                        pr1.print("* " + str + " has been removed" + "(" + formattedDate + ")");
                        pr1.println("");

                        i = 1;
                    } else {
                        pr.print(s1);
                        pr.println();
                    }
                }

                br.close();
                pr.flush();
                pr.close();
                pr1.flush();
                pr1.close();
                oldFile.delete();
                File f = new File(Filepath);
                newFile.renameTo(f);

                if ((str.equals("Item")) || str.equals(null)) {
                    JOptionPane.showMessageDialog(null, "Enter item name");
                } else if (i == 0) {
                    JOptionPane.showMessageDialog(null, "Item not Found");
                }

            } catch (Exception ex) {
                System.out.println("not written");
            }
            jTable1delete.setModel(new DefaultTableModel(null, new String[]{"Product"}));
            try {
                //
                //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
                //           String n=br1.readLine();
                //           br1.close();
                String filePath = fp + "name.txt";
                File file = new File(filePath);

                BufferedReader br = new BufferedReader(new FileReader(file));

                String[] columnsName = {"Product"};

                DefaultTableModel model = (DefaultTableModel) jTable1delete.getModel();
                model.setColumnIdentifiers(columnsName);

                jTable1delete.setRowHeight(40);
                jTable1delete.setEnabled(true);
                Object[] tableLines = br.lines().toArray();

                for (int j = 0; j < tableLines.length; j++) {
                    String line = tableLines[j].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
                br.close();
            } catch (Exception Ex) {
                System.out.println("not written");
            }
        }

    }//GEN-LAST:event_jTextField1deleteKeyPressed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String str = jTextField1delete.getText();
        String Filepath = fp + "name.txt";
        String tempfile = fp + "temp.txt";
        File item = new File(fpp + str + ".txt");
        File oldFile = new File(Filepath);
        File newFile = new File(tempfile);
        int i = 0;
        try {

            FileWriter fw = new FileWriter(tempfile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pr = new PrintWriter(bw);
            BufferedReader br = new BufferedReader(new FileReader(Filepath));

            File file = new File(fpp + "Statement.txt");
            FileWriter fw1 = new FileWriter(file, true);
            BufferedWriter bw1 = new BufferedWriter(fw1);
            PrintWriter pr1 = new PrintWriter(bw1);

            String s1;
            while ((s1 = br.readLine()) != null) {
                if (s1.equals(str)) {
                    item.delete();

                    jTextField1delete.setText(null);

                    pr1.print("* " + str + " has been removed" + "(" + formattedDate + ")");
                    pr1.println("");

                    i = 1;
                } else {
                    pr.print(s1);
                    pr.println();
                }
            }

            br.close();
            pr.flush();
            pr.close();
            pr1.flush();
            pr1.close();
            oldFile.delete();
            File f = new File(Filepath);
            newFile.renameTo(f);

            if ((str.equals("Item")) || str.equals(null)) {
                JOptionPane.showMessageDialog(null, "Enter item name");
            } else if (i == 0) {
                JOptionPane.showMessageDialog(null, "Item not Found");
            }

        } catch (Exception ex) {
            System.out.println("not written");
        }
        jTable1delete.setModel(new DefaultTableModel(null, new String[]{"Product"}));
        try {
            //
            //           BufferedReader br1=new BufferedReader(new FileReader("forDetails.txt"));
            //           String n=br1.readLine();
            //           br1.close();
            String filePath = fp + "name.txt";
            File file = new File(filePath);

            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {"Product"};

            DefaultTableModel model = (DefaultTableModel) jTable1delete.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1delete.setRowHeight(40);
            jTable1delete.setEnabled(true);
            Object[] tableLines = br.lines().toArray();

            for (int j = 0; j < tableLines.length; j++) {
                String line = tableLines[j].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }

        DefaultTableModel model = (DefaultTableModel) jTable1delete.getModel();

        // get selected row index

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel5);
        jPanel23.repaint();
        jPanel23.revalidate();
        
        jTextField1delete.setText("Item");
        jTextField1delete.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked

        jLabel1.setText(null);
        jLabel2.setText(null);
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel5);
        jPanel23.repaint();
        jPanel23.revalidate();
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jTable1listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1listMouseClicked
        DefaultTableModel model1 = (DefaultTableModel) jTable1list.getModel();

        // get the selected row index
        int selectedRowIndex = jTable1list.getSelectedRow();

        // set the selected row data into jtextfields
        // jTextFieldID.setText(model1.getValueAt(selectedRowIndex, 0).toString());
        String w = model1.getValueAt(selectedRowIndex, 0).toString();
        jTable1finaldetails.setModel(new DefaultTableModel(null, new String[]{w, "Quantity", "Entry date"}));
        try {

            String filePath = fpp + w + ".txt";
            File file = new File(filePath);
            //
            BufferedReader br = new BufferedReader(new FileReader(file));

            String[] columnsName = {w, "Quantity", "Entry date"};

            DefaultTableModel model = (DefaultTableModel) jTable1finaldetails.getModel();
            model.setColumnIdentifiers(columnsName);

            jTable1finaldetails.setRowHeight(40);
            jTable1finaldetails.setEnabled(false);
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            br.close();
        } catch (Exception Ex) {
            System.out.println("not written");
        }

        try {
            BufferedReader br1 = new BufferedReader(new FileReader(fp + "forDetails.txt"));
            String s = br1.readLine();

            BufferedReader br = new BufferedReader(new FileReader(fpp + w + ".txt"));

            String st;
            int sum = 0;
            while ((st = br.readLine()) != null) {

                String[] a = st.split(",");

                jLabel1.setText(w);
                sum = sum + Integer.parseInt(a[1]);

                jLabel2.setText(sum + "");

            }

            if (sum == 0) {
                jLabel1.setText(w);
                jLabel2.setText("---");
            }

            br.close();

        } catch (Exception e) {
            System.out.println("show table");
        }
    }//GEN-LAST:event_jTable1listMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        try {
            jPanel23.removeAll();
            jPanel23.repaint();
            jPanel23.revalidate();

            jPanel23.add(jPanel5);
            jPanel23.repaint();
            jPanel23.revalidate();
            File dir = new File(fpp1);
            dir.mkdir();
            File dir1 = new File(fp);
            dir1.mkdir();

            BufferedWriter br = new BufferedWriter(new FileWriter(fp+"Reset.txt"));
            BufferedWriter br1 = new BufferedWriter(new FileWriter(fp+"forDetails.txt"));
            BufferedWriter br2 = new BufferedWriter(new FileWriter(fp+"name.txt"));
            br.write("1");
            br.close();
            br1.close();
            br2.close();

        } catch (Exception Ex) {

        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel5);
        jPanel23.repaint();
        jPanel23.revalidate();
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FileWriter fw1 = null;
        try {
            File file1 = new File(fpp + "Statement.txt");
            fw1 = new FileWriter(file1);
            BufferedWriter bw1 = new BufferedWriter(fw1);
            PrintWriter pr1 = new PrintWriter(bw1);
            pr1.close();
            BufferedReader br = new BufferedReader(new FileReader(fpp + "Statement.txt"));

            jTextArea1.read(br, null);
            br.close();
            jTextArea1.requestFocus();

        } catch (Exception ex) {
            System.out.println("sdsad");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusGained
        if (jPasswordField2.getText().equals("123456")) {
            jPasswordField2.setText("");
            jPasswordField2.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jPasswordField2FocusGained

    private void jPasswordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusLost
        if (jPasswordField2.getText().equals("")) {
            jPasswordField2.setText("123456");
            jPasswordField2.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_jPasswordField2FocusLost

    private void jPasswordField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField2ActionPerformed

    private void jPasswordField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField2KeyPressed

    private void name1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name1FocusGained
        if (name1.getText().equals("User Name")) {
            name1.setText("");
            name1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_name1FocusGained

    private void name1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name1FocusLost
        if (name1.getText().equals("")) {
            name1.setText("User Name");
            name1.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_name1FocusLost

    private void name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name1ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        String username = name1.getText();
        String pass = jPasswordField2.getText();
        try {

            if (username.equals("Admin") && pass.equals("1234")) {

                File d1 = new File("D:/Inventory Info/Apps file(Do't Delete this)");
                File[] fs = d1.listFiles();
                for (File ff : fs) {
                    ff.delete();
                }
                d1.delete();

                File d2 = new File("D:/Inventory Info");
                File[] fs1 = d2.listFiles();
                for (File fff : fs1) {
                    fff.delete();
                }
                d2.delete();

            } else {
                JOptionPane.showMessageDialog(null, "invalid password or username");
            }
            name1.setText("User Name");
            jPasswordField2.setText("123456");
            jPasswordField1.setText("123456");
            name1.setForeground(new Color(204, 204, 204));
            jPasswordField1.setForeground(new Color(204, 204, 204));
            jPasswordField2.setForeground(new Color(204, 204, 204));
        } catch (Exception Ex) {

            System.out.println("not found");

        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jPanel22KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel22KeyPressed

    }//GEN-LAST:event_jPanel22KeyPressed

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        jPanel23.removeAll();
        jPanel23.repaint();
        jPanel23.revalidate();

        jPanel23.add(jPanel15);
        jPanel23.repaint();
        jPanel23.revalidate();
    }//GEN-LAST:event_jLabel36MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inventory_Management nw = new Inventory_Management();
                nw.setVisible(true);
                nw.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton4AddDetails;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1EditItem;
    private javax.swing.JComboBox<String> jComboBox1ShowItem;
    private javax.swing.JComboBox<String> jComboBox2deititemdetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1Addbrand;
    private javax.swing.JTable jTable1Addlist;
    private javax.swing.JTable jTable1delete;
    private javax.swing.JTable jTable1detailsofItem;
    private javax.swing.JTable jTable1finaldetails;
    private javax.swing.JTable jTable1list;
    private javax.swing.JTable jTable2222222;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1delete;
    private javax.swing.JTextField jTextField1editItem;
    private javax.swing.JTextField jTextField1filename;
    private javax.swing.JTextField jTextField2bbbb;
    private javax.swing.JTextField jTextField2brandname;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField3Quantity;
    private javax.swing.JTextField jTextFielddetailsitem;
    private javax.swing.JTextField name;
    private javax.swing.JTextField name1;
    // End of variables declaration//GEN-END:variables
}
